/*
 * Faça um programa que leia dois arrays de int e mostre a união e a intercessão entre os elementos desses arrays.
 */

using System;

namespace Exercicio_02
{
    class Program
    {
        static void Main(string[] args)
        {
            // Declaração de variáveis
            int n, aux = 0, contador, tamanho;

            // Recebendo o tamanho do primeiro vetor do usuário
            Console.Clear();
            Console.WriteLine();
            Console.Write(" Entre com o tamanho do vetor A: ");
            n = int.Parse(Console.ReadLine());

            // Criando vetor A de 'n' posições
            int[] vetA = new int[n];

            // Recebendo o tamanho do primeiro vetor do usuário
            Console.Clear();
            Console.WriteLine();
            Console.Write(" Entre com o tamanho do vetor B: ");
            n = int.Parse(Console.ReadLine());

            // Criando vetor B de 'n' posições
            int[] vetB = new int[n];

            // Criando o vetor de intercessão
            if (vetA.Length >= vetB.Length)
            {
                tamanho = vetB.Length;
            }
            else
            {
                tamanho = vetA.Length;
            }

            int[] vetInter = new int[tamanho];

            // Criando o vetor de união
            int[] vetUniao = new int[vetA.Length + vetB.Length];

            // Preenchendo o vetor A e o vetor de união
            for (int i = 0; i < vetA.Length; i++)
            {
                Console.Clear();
                Console.WriteLine();
                Console.Write(" Entre com o valor da {0}ª posição do vetor A: ", (i + 1));
                vetA[i] = int.Parse(Console.ReadLine());
                vetUniao[i] = vetA[i];
            }

            // Salvando o número da última posição preenchida do vetor união
            contador = vetA.Length;

            // Preenchendo o vetor B, o vetor de união e o vetor intercessão
            for (int i = 0; i < vetB.Length; i++)
            {
                aux = 0;
                Console.Clear();
                Console.WriteLine();
                Console.Write(" Entre com o valor da {0}ª posição do vetor B: ", (i + 1));
                vetB[i] = int.Parse(Console.ReadLine());

                // Verificando valores iguais no vetor união e no vetor B
                for (int j = 0; j < vetUniao.Length; j++)
                {
                    if (vetB[i] == vetUniao[j])
                    {
                        aux++;
                    }
                }

                // Inserindo valores do vetor B no vetor união
                if (aux == 0)
                {
                    vetUniao[contador] = vetB[i];
                    contador++;
                }
            }

            // Verificando valores iguais nos vetores A e B e preenchendo o vetor intercessão
            for (int i = 0; i < vetA.Length; i++)
            {
                for (int j = 0; j < vetB.Length; j++)
                {
                    if (vetA[i] == vetB[j])
                    {
                        vetInter[i] = vetA[i];
                    }
                }
            }

            // Imprimindo resultados
            Console.Clear();
            Console.WriteLine();

            // Imprimindo vetor A
            Console.WriteLine("Vetor A: ");
            for (int i = 0; i < vetA.Length; i++)
            {
                Console.Write("[{0}] ", vetA[i]);
            }

            // Imprimindo vetor B
            Console.WriteLine();
            Console.WriteLine("Vetor B: ");
            for (int i = 0; i < vetB.Length; i++)
            {
                Console.Write("[{0}] ", vetB[i]);
            }

            // Imprimindo vetor União
            Console.WriteLine();
            Console.WriteLine("Vetor União: ");
            for (int i = 0; i < vetUniao.Length; i++)
            {
                if (vetUniao[i] != 0)
                {
                    Console.Write("[{0}] ", vetUniao[i]);
                }
            }

            // Imprimindo vetor Intercessão
            Console.WriteLine();
            Console.WriteLine("Vetor Intercessão: ");
            for (int i = 0; i < vetInter.Length; i++)
            {
                if (vetInter[i] != 0)
                {
                    Console.Write("[{0}] ", vetInter[i]);
                }
            }

            // Finalizando programa
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("Pressione qualquer tecla para sair...");
            Console.ReadKey();
        }
    }
}
